import time
import board
import pwmio
import digitalio
import busio
import adafruit_tca9548a
import adafruit_vl6180x

#Define Left Motor
motor1_pwm = pwmio.PWMOut(board.GP13)
motor1_direction1 = digitalio.DigitalInOut(board.GP14)
motor1_direction1.direction = digitalio.Direction.OUTPUT
motor1_direction2 = digitalio.DigitalInOut(board.GP15)
motor1_direction2.direction = digitalio.Direction.OUTPUT

#Define Right Motor
motor2_pwm = pwmio.PWMOut(board.GP16)
motor2_direction1 = digitalio.DigitalInOut(board.GP17)
motor2_direction1.direction = digitalio.Direction.OUTPUT
motor2_direction2 = digitalio.DigitalInOut(board.GP18)
motor2_direction2.direction = digitalio.Direction.OUTPUT

#Define Button
button_pin = digitalio.DigitalInOut(board.GP19)
button_pin.switch_to_input(pull=digitalio.Pull.UP)

#Define LED
led = digitalio.DigitalInOut(board.LED)
led.switch_to_output()

#Create an I2C Bus
i2c = busio.I2C(board.GP1, board.GP0)  # Adjust the pin assignments as needed

#Create a Multiplexer Object
mux = adafruit_tca9548a.TCA9548A(i2c)

#Create VL6180X sensor objects for each channel
sensor1 = adafruit_vl6180x.VL6180X(mux[0]) #Left Sensor
sensor2 = adafruit_vl6180x.VL6180X(mux[1]) #Middle Sensor
sensor3 = adafruit_vl6180x.VL6180X(mux[2]) #Right Sensor

#Function to control the direction and speed of motor 1
def set_motor1(speed):
    if speed > 0:
        motor1_direction1.value = True
        motor1_direction2.value = False
    elif speed < 0:
        motor1_direction1.value = False
        motor1_direction2.value = True
    else:
        motor1_direction1.value = False
        motor1_direction2.value = False
    motor1_pwm.duty_cycle = int(abs(speed) * 65535)

#Function to control the direction and speed of motor 2
def set_motor2(speed):
    speed = -speed
    if speed > 0:
        motor2_direction1.value = True
        motor2_direction2.value = False
    elif speed < 0:
        motor2_direction1.value = False
        motor2_direction2.value = True
    else:
        motor2_direction1.value = False
        motor2_direction2.value = False
    motor2_pwm.duty_cycle = int(abs(speed) * 65535)

#Main Program
start = False

while True:
    if not button_pin.value:
        start = True

    if start:
        if sensor2.range > 60:
            set_motor1(0.3)
            set_motor2(0.3)
        else: 
            set_motor1(0)    # Stop motor 1
            set_motor2(0)    # Stop motor 2

    else:
        set_motor1(0)    # Stop motor 1
        set_motor2(0)    # Stop motor 2
